############################# bindings #########################################
### moving around
# { swap this and previous panes
# } swap this and next panes

# C-<number> jump to window
# M-<number> jump to pane

# h move to left pane
# l move to right pane
# j move to lower pane
# k move to upper pane

# q show pane numbers. press a number to jump to it.

### creating + editing new panes
# c create window
# s create horizontal split
# v create vertical split
# x destroy window/pane
# m swap window with another

# , rename window
# r renumber windows in order

# z zoom into pane. press again to unzoom.
# B break current pane off into its own window
# J pull pane from another window to this one. syntax: "window[.pane]"
# S send pane from this window to another one. syntax: "window[.after-pane]"

### copy/paste (works with mac)
# v enter copy mode
# p paste copied text
# y move copied text to clipboard (shared with mac clipboard)

### entering/exiting
# x kill pane
# X kill tmux
# d detach from tmux (save for later)

################################################################################

# vim mode!
setw -g mode-keys vi

# copy tmux clipboard to mac clipboard
bind y run-shell "reattach-to-user-namespace -l zsh -c 'tmux show-buffer | pbcopy'"

bind-key : command-prompt
bind-key L clear-history
bind-key X confirm kill-server

# open new window in same directory
unbind c
bind-key c new-window -c '#{pane_current_path}'

# use vim-like keys for splits and windows (open in same directory)
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -v -c '#{pane_current_path}'

# use vim-like keys to select panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# # grow/shrink panes
# bind-key J resize-pane -D 5
# bind-key K resize-pane -U 5
# bind-key H resize-pane -L 5
# bind-key L resize-pane -R 5

# select panes with M-<number>
bind-key M-0 select-pane -t 0
bind-key M-1 select-pane -t 1
bind-key M-2 select-pane -t 2
bind-key M-3 select-pane -t 3
bind-key M-4 select-pane -t 4
bind-key M-5 select-pane -t 5
bind-key M-6 select-pane -t 6
bind-key M-7 select-pane -t 7
bind-key M-8 select-pane -t 8
bind-key M-9 select-pane -t 9

# cycle panes
bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

bind-key g last-pane
bind-key q display-panes
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# renumber windows
bind-key r move-window -r

# send/get panes from other windows
bind-key B break-pane
bind-key J command-prompt -p "join pane from:"  "join-pane -s ':%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t ':%%'"

# change window number
bind-key m command-prompt -p "swap window with:" "swap-window -t ':%%'"

################################################################################

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# windows indexed from 1
set -g base-index 1
set -g pane-base-index 1

# UTF-8 character support in the status bar
set-option -g status-utf8 on

# mouse behavior
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# set active pane's border to grey
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg black
set -g pane-active-border-bg white

set -g default-terminal "screen-256color"

# number of lines of history
set -g history-limit 20000
set-window-option -g display-panes-time 1500

# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default

# Status Bar solarized-dark (default)
set-option -g status-bg black
set-option -g pane-active-border-fg black
set-option -g pane-border-fg black

# Status Bar solarized-light
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

############################# mac copy/paste ###################################
#### Note: The following only works with tmux 1.8+. See,                    ####
####   http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future ####
################################################################################

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
if-shell 'test "$(uname)" = "Linux"'  'source ~/.tmux-linux.conf'

### copy/paste support for tmux's internal copypaste mode.
# (v to start, y to copy/q to quit, p to paste).
bind-key -t vi-copy v begin-selection
unbind p
bind p paste-buffer
################################################################################

